CREATE TABLE TRN_COMPANY_WALLET
(
TNCW_ID INTEGER NOT NULL ,
TNCPD_ID INTEGER NULL,
CW_TRANSACTION_NO CHARACTER VARYING(128) NULL,
CW_TRANSACTION_DETAIL CHARACTER VARYING(128) NULL,
CW_AMOUNT INTEGER NULL,
CW_TRN_CODE CHARACTER VARYING(128) NULL,
CW_PAYMENT_MODE CHARACTER VARYING(128) NULL,
CW_TRN_STATUS CHARACTER VARYING(128) NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRN_COMPANY_WALLET
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRN_COMPANY_WALLET
 ALTER COLUMN TNCW_ID  SET DEFAULT nextval('SEQ_TRN_COMPANY_WALLET');


CREATE OR REPLACE FUNCTION TRG_TRN_COMPANY_WALLET()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRN_COMPANY_WALLET=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRN_COMPANY_WALLET ADD CONSTRAINT TRN_COMPANY_WALLET_pkey primary key(TNCW_ID);CREATE TABLE HST_TRN_COMPANY_WALLET ( 

TNCW_ID INTEGER NULL ,
TNCPD_ID INTEGER NULL,
CW_TRANSACTION_NO CHARACTER VARYING(128) NULL,
CW_TRANSACTION_DETAIL CHARACTER VARYING(128) NULL,
CW_AMOUNT INTEGER NULL,
CW_TRN_CODE CHARACTER VARYING(128) NULL,
CW_PAYMENT_MODE CHARACTER VARYING(128) NULL,
CW_TRN_STATUS CHARACTER VARYING(128) NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE OR REPLACE FUNCTION FN_TRG_HST_TRN_COMPANY_WALLET()
 RETURNS trigger AS 
 $BODY$ 
 DECLARE
 vSEQ BIGINT; 
 BEGIN 
 IF TG_OP = 'INSERT' THEN 
 INSERT INTO HST_TRN_COMPANY_WALLET SELECT NEW.* ; 
 ELSIF TG_OP = 'UPDATE' THEN 
 INSERT INTO HST_TRN_COMPANY_WALLET SELECT NEW.* ; 

 END IF; 
 RETURN NEW; 
 END; 
 $BODY$ 
 LANGUAGE plpgsql ; 

 CREATE TRIGGER TRG_HST_TRN_COMPANY_WALLET
 AFTER INSERT Or UPDATE 
 ON TRN_COMPANY_WALLET
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRN_COMPANY_WALLET() ;


ALTER TABLE TRN_COMPANY_WALLET  DISABLE TRIGGER TRG_HST_TRN_COMPANY_WALLET ;
